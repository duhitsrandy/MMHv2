Notepad Name: Sonnet Roadmap

## **üö® CRITICAL DEVELOPMENT GUIDELINE** üö®
**DO NOT SUGGEST CHANGES TO WORKING FEATURES**
- This app has working features built by other models
- Focus is on payment/premium structure completion and going live
- Only suggest changes for: efficiency, security, or adding complex new features
- Always verify current functionality before suggesting modifications
- Live traffic routing for Pro+ users is ALREADY WORKING via HERE API
- Upgrade modal system needs completion, but core feature gating works

---

## Mobile App Plan (Expo) ‚Äî August 2025

- ‚úÖ Chosen stack: Expo + Expo Router + NativeWind + React Native Maps + Clerk Expo + Supabase
- ‚úÖ Scaffolded project: `MeetMeHalfwayMobile/` with tabs, RN maps example, Supabase connectivity check
- ‚úÖ Config: `app.json` updated (scheme `mmh`, iOS location permissions, Stripe plugin stub)
- ‚úÖ Auth shell: `ClerkProvider` wired in `app/_layout.tsx` using `expo-secure-store`
- ‚úÖ Data: `react-native-url-polyfill` and `AsyncStorage` added; Supabase client sample in `app/(tabs)/two.tsx`
- ‚úÖ API: `app/services/api.ts` uses absolute `EXPO_PUBLIC_API_BASE_URL`
- ‚úÖ Styling: NativeWind/Tailwind configured (`tailwind.config.js`, `postcss.config.js`, `babel.config.js`)

### Env keys to add (EAS Secrets or local .env)
- `EXPO_PUBLIC_API_BASE_URL`
- `EXPO_PUBLIC_CLERK_PUBLISHABLE_KEY`
- `EXPO_PUBLIC_SUPABASE_URL`
- `EXPO_PUBLIC_SUPABASE_ANON_KEY`
- `EXPO_PUBLIC_STRIPE_PUBLISHABLE_KEY`

### Next Steps
- Implement screens: Home (origins form), Results (midpoint + POIs), Saved Searches, Profile
- Replace web fetches with `API_BASE` endpoints; reuse existing Next.js API
- Port map overlays (routes, midpoint, POI markers) to `react-native-maps`
- Decide on iOS purchase compliance (RevenueCat or disable in-app purchase UI)
- Configure deep links/universal links for Clerk sign-in
- Set EAS projectId and run EAS build + TestFlight

### Commands
```
cd /Users/randy/mmhv2/MeetMeHalfwayMobile
npm run ios
```

## **What's Currently Working (DO NOT CHANGE)**
- ‚úÖ Live traffic routing: Pro users automatically get HERE Matrix API
- ‚úÖ Plan detection and feature gating logic
- ‚úÖ Core mapping and midpoint calculation
- ‚úÖ Database schema and user management
- ‚úÖ Stripe backend integration (webhooks work)

## **What Actually Needs Completion**
- ‚úÖ Frontend upgrade modal UI component (ENHANCED - shows required tier + option to view/select other plans + link to full pricing page)
- ‚úÖ Stripe checkout session creation flow (VERIFIED - full integration with all tiers)
- ‚úÖ Parameter mismatch bug: FIXED - upgrade modal now uses proper createCheckoutSession with priceId
- ‚úÖ Upgrade flow integration: VERIFIED - form ‚Üí triggers ‚Üí modal ‚Üí Stripe checkout  
- ‚úÖ CRITICAL BUG FIXED: usePlan hook returned 'tier' but form expected 'plan' - now fixed
- ‚úÖ Tier comparison logic: Fixed 'free' ‚Üí 'starter' to match actual tier system
- ‚úÖ Modal props alignment: FIXED - modal now supports feature/requiredTier props as documented
- ‚úÖ PostHog analytics (ENABLED - comprehensive tracking implemented with centralized events, analytics hook, and key user journey tracking)
- ‚ùå Ad monetization integration  
- ‚ùå Payment success/failure handling in UI
- ‚ùå Production deployment configuration

--- 